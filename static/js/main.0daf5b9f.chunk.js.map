{"version":3,"sources":["Context.js","Components/Header.js","hooks/useHover.js","Components/CartItem.js","Pages/Cart.js","Components/Image.js","Utils/size.js","Pages/Photos.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","ContextProvider","children","useState","allPhotos","setAllPhotos","cartItems","setCartItems","useEffect","fetch","then","res","json","data","Provider","value","toggleFavorite","id","updatedArr","map","photo","isFavorite","addToCart","newItem","prevItems","removeFromCart","filter","item","emptyCart","Header","cartClassName","useContext","length","className","to","useHover","hovered","setHovered","ref","useRef","enter","leave","reference","current","addEventListener","removeEventListener","CartItem","iconClassName","onClick","src","url","width","Cart","buttonText","setButtonText","totalCostDisplay","toLocaleString","style","currency","cartItemElements","setTimeout","Image","img","some","getClass","i","Photos","imageElements","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0daf5b9f.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nfunction ContextProvider({children}){\r\n    const [allPhotos, setAllPhotos] = useState([]);\r\n    const [cartItems, setCartItems] = useState([]);\r\n    const url =\"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\"\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => setAllPhotos(data))\r\n    }, [])\r\n\r\n    const toggleFavorite = (id) => {\r\n        const updatedArr = allPhotos.map(photo => {\r\n            if(photo.id === id){\r\n                return {\r\n                    ...photo,\r\n                    isFavorite : !photo.isFavorite\r\n                }\r\n            }\r\n            return photo;\r\n        })\r\n\r\n        setAllPhotos(updatedArr)\r\n    }\r\n\r\n    const addToCart = (newItem) => {\r\n        setCartItems(prevItems => [...prevItems, newItem])\r\n    }\r\n\r\n    const removeFromCart = (id) => {\r\n        setCartItems(prevItems => prevItems.filter(item => item.id !== id))\r\n    }\r\n\r\n    const emptyCart = () => {\r\n        setCartItems([])\r\n    }\r\n    \r\n    return (\r\n        <Context.Provider value={{\r\n            allPhotos, \r\n            toggleFavorite, \r\n            cartItems, \r\n            addToCart, \r\n            removeFromCart, \r\n            emptyCart\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport {ContextProvider, Context}","import React, { useContext } from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport {Context} from \"../Context\"\r\n\r\nfunction Header(){\r\n    const {cartItems} = useContext(Context);\r\n    const cartClassName = cartItems.length > 0 ? \"ri-shopping-cart-fill\" : \"ri-shopping-cart-line\";\r\n    return (\r\n        <header>\r\n            <h2 className=\"heading\"><Link to=\"/\">Pic Some</Link></h2>\r\n            <Link to=\"/cart\"><i className={`${cartClassName} ri-fw ri-2x cartsize`}></i></Link>\r\n        </header>\r\n    );\r\n}\r\nexport default Header;","import {useState, useEffect, useRef} from \"react\"\r\n\r\nfunction useHover() {\r\n    const [hovered, setHovered] = useState(false)\r\n    const ref = useRef(null)\r\n    \r\n    function enter() {\r\n        setHovered(true)\r\n    }\r\n    \r\n    function leave() {\r\n        setHovered(false)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const reference = ref.current;\r\n        reference.addEventListener(\"mouseenter\", enter)\r\n        reference.addEventListener(\"mouseleave\", leave)\r\n        \r\n        return () => {    \r\n            reference.removeEventListener(\"mouseenter\", enter)\r\n            reference.removeEventListener(\"mouseleave\", leave)\r\n        }\r\n    }, [])\r\n    \r\n    return [hovered, ref]\r\n}\r\n\r\nexport default useHover","import React, {useContext} from \"react\"\r\nimport {Context} from \"../Context\"\r\nimport useHover from \"../hooks/useHover\"\r\n\r\nfunction CartItem({item}) {\r\n    const [hovered, ref] = useHover()\r\n    const {removeFromCart} = useContext(Context)\r\n    \r\n    const iconClassName = hovered ? \"ri-delete-bin-fill\" : \"ri-delete-bin-line\"\r\n    \r\n    return (\r\n        <div className=\"cart-item\">\r\n            <i \r\n                className={iconClassName} \r\n                onClick={() => removeFromCart(item.id)}\r\n                ref={ref}\r\n            >\r\n            </i>\r\n            \r\n            <img src={item.url} width=\"130px\" />\r\n            <p>$5.99</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem","import React, {useState, useContext} from \"react\"\r\nimport {Context} from \"../Context\"\r\nimport CartItem from \"../Components/CartItem\"\r\n\r\nfunction Cart() {\r\n    const {cartItems, emptyCart} = useContext(Context)\r\n    const [buttonText, setButtonText] = useState(\"Place Order\");\r\n    const totalCost = 49.99 * cartItems.length\r\n    const totalCostDisplay = totalCost.toLocaleString(\"en-IN\", {style: \"currency\", currency: \"INR\"})\r\n    const cartItemElements = cartItems.map(item => (\r\n        <CartItem key={item.id} item={item} />\r\n    ))\r\n\r\n    const placeOrder = () => {\r\n        setButtonText(\"Ordering...\")\r\n        setTimeout(() => {\r\n            setButtonText(\"Place Order\")\r\n            emptyCart()\r\n        }, 3000)\r\n    }\r\n    \r\n    return (\r\n        <main className=\"cart-page\">\r\n            <h1>Check out</h1>\r\n            {cartItemElements}\r\n            <p className=\"total-cost\">Total: {totalCostDisplay}</p>\r\n            <div className=\"order-button\">\r\n                <button onClick={placeOrder}>{buttonText}</button>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Cart","import React, {useContext} from \"react\"\r\nimport {Context} from \"../Context\"\r\nimport PropTypes from \"prop-types\"\r\nimport useHover from \"../hooks/useHover\"\r\n\r\nfunction Image({className, img}) {\r\n    const {toggleFavorite, addToCart, cartItems, removeFromCart} = useContext(Context)\r\n    const [hovered, ref] = useHover()\r\n\r\n    function heartIcon(){\r\n        if(img.isFavorite){\r\n            return <i className=\"ri-heart-fill favorite\" onClick={() => toggleFavorite(img.id)}></i>\r\n        } else if(hovered) {\r\n            return <i className=\"ri-heart-line favorite\" onClick={() => toggleFavorite(img.id)}></i>\r\n        }\r\n    }\r\n\r\n    function cartIcon(){\r\n        const alreadyInCart = cartItems.some(item => item.id === img.id)\r\n        if(alreadyInCart){\r\n            return <i className=\"ri-shopping-cart-fill cart\" onClick={() => removeFromCart(img.id)}></i>\r\n        } else if(hovered){\r\n            return <i className=\"ri-add-circle-line cart\" onClick={() => addToCart(img)}></i>\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={`${className} image-container`} \r\n            ref={ref}\r\n        >\r\n            <img src={img.url} className=\"image-grid\" />\r\n            {heartIcon()}\r\n            {cartIcon()}\r\n        </div>\r\n    )\r\n}\r\n\r\nImage.propTypes = {\r\n    className: PropTypes.string,\r\n    img: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        url: PropTypes.string.isRequired,\r\n        isFavorite: PropTypes.bool\r\n    })\r\n}\r\n\r\nexport default Image","export function getClass(i) {\r\n    if (i % 5 === 0) {\r\n        return 'big';\r\n    }\r\n    else if (i % 6 === 0) {\r\n        return 'wide'\r\n    }\r\n}","import React, {useContext} from \"react\"\r\nimport Image from \"../Components/Image\"\r\nimport {Context} from \"../Context\";\r\nimport { getClass } from \"../Utils/size\";\r\n\r\nfunction Photos() {\r\n    const {allPhotos} = useContext(Context);\r\n\r\n    const imageElements = allPhotos.map((img, i) => (\r\n        <Image key={img.id} img={img} className={getClass(i)}/>\r\n    ))\r\n    return (\r\n        <main className=\"photos\">\r\n            {imageElements}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Photos","import React from \"react\"\nimport { Switch, Route } from \"react-router-dom\";\nimport './App.css';\nimport Header from \"./Components/Header\"\nimport Cart from \"./Pages/Cart\"\nimport Photos from \"./Pages/Photos\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n\n      <Switch>\n         <Route exact path=\"/\">\n           <Photos />\n         </Route>\n         <Route path=\"/cart\">\n           <Cart />\n         </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ContextProvider } from './Context';\n\nReactDOM.render(\n  <ContextProvider>\n      <Router>\n          <App />\n      </Router>\n  </ContextProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}